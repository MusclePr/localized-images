name: Build Localized Images

concurrency:
  group: gh-pages-update-${{ github.repository }}
  cancel-in-progress: false

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # 毎日チェック
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build regardless of upstream changes'
        default: false
        type: boolean

env:
  DST_REGISTRY: ghcr.io
  DST_USER: musclepr

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        include:
          - name: minecraft-server:latest
            src: itzg
          - name: minecraft-server:java17
            src: itzg
          - name: mc-proxy:latest
            src: itzg
          - name: mc-backup:latest
            src: itzg

    steps:
    - uses: actions/checkout@v4

    - name: Check if build needed (gh-pages digests)
      id: check
      run: |
        SRC_IMG="${{ matrix.src }}/${{ matrix.name }}"
        DIGESTS_URL="https://musclepr.github.io/localized-images/digests.json"
        # Force build or push event
        if [ "${{ github.event.inputs.force_build }}" = "true" ] || [ "${{ github.event_name }}" = "push" ]; then
          echo "needs_build=true" >> $GITHUB_OUTPUT
          echo "Reason: Force build or push event"
          exit 0
        fi
        # Get previous digest from gh-pages
        PREV_DIGEST=$(curl -s "$DIGESTS_URL" | jq -r --arg key "$SRC_IMG" '.[$key] // empty')
        # Get upstream digest
        UP_DIGEST=$(docker manifest inspect $SRC_IMG 2>/dev/null | jq -r '.manifests[0].digest // .digest' || echo "")
        if [ "$PREV_DIGEST" = "$UP_DIGEST" ] && [ -n "$PREV_DIGEST" ]; then
          echo "needs_build=false" >> $GITHUB_OUTPUT
          echo "上流に変更なし。ビルド不要。"
        else
          echo "needs_build=true" >> $GITHUB_OUTPUT
          echo "上流に変更あり。ビルド必要。"
        fi

    - name: Set up Docker Buildx
      if: steps.check.outputs.needs_build == 'true'
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      if: steps.check.outputs.needs_build == 'true'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DST_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      if: steps.check.outputs.needs_build == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        build-args: |
          IMAGE=${{ matrix.src }}/${{ matrix.name }}
        tags: ${{ env.DST_REGISTRY }}/${{ env.DST_USER }}/${{ matrix.name }}
        labels: |
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}

    - name: Update digests.json on gh-pages
      if: steps.check.outputs.needs_build == 'true'
      run: |
        SRC_IMG="${{ matrix.src }}/${{ matrix.name }}"
        UP_DIGEST=$(docker manifest inspect $SRC_IMG 2>/dev/null | jq -r '.manifests[0].digest // .digest' || echo "")
        # Clone gh-pages branch
        git config --global user.email "github-actions@github.com"
        git config --global user.name "github-actions"
        git clone --branch gh-pages --depth 1 "https://github.com/${{ github.repository }}.git" gh-pages
        cd gh-pages
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        # Update digests.json
        if [ ! -f digests.json ]; then echo "{}" > digests.json; fi
        jq --arg key "$SRC_IMG" --arg val "$UP_DIGEST" '.[$key]=$val' digests.json > digests.json.tmp && mv digests.json.tmp digests.json
        git add digests.json
        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m "ダイジェスト更新：$SRC_IMG"
          git pull --rebase origin gh-pages
          git push origin gh-pages
        fi
