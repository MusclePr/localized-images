name: Build Localized Images

on:
  push:
    branches: [ main, master ]
  schedule:
    - cron: '0 * * * *'  # 毎時間チェック
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build regardless of upstream changes'
        default: false
        type: boolean

env:
  DST_REGISTRY: ghcr.io
  DST_USER: musclepr

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - base_image: itzg/minecraft-server
            project: minecraft-server
            tag: latest
          - base_image: itzg/minecraft-server
            project: minecraft-server
            tag: java17
          - base_image: itzg/mc-proxy
            project: mc-proxy
            tag: latest
          - base_image: itzg/mc-backup
            project: mc-backup
            tag: latest
          - base_image: itzg/mc-backup
            project: mc-backup
            tag: latest

    steps:
    - uses: actions/checkout@v4

    - name: Check if build needed
      id: check
      run: |
        SRC_IMG="${{ matrix.base_image }}:${{ matrix.tag }}"
        DST_IMG="${{ env.DST_REGISTRY }}/${{ env.DST_USER }}/${{ matrix.project }}:${{ matrix.tag }}"
        
        # Force build or push event
        if [ "${{ github.event.inputs.force_build }}" = "true" ] || [ "${{ github.event_name }}" = "push" ]; then
          echo "needs_build=true" >> $GITHUB_OUTPUT
          echo "Reason: Force build or push event"
          exit 0
        fi
        
        # Check upstream digest
        UP_DIGEST=$(docker manifest inspect $SRC_IMG 2>/dev/null | jq -r '.manifests[0].digest // .digest' || echo "")
        CUR_DIGEST=$(docker manifest inspect $DST_IMG 2>/dev/null | jq -r '.manifests[0].digest // .digest' || echo "")
        
        if [ "$UP_DIGEST" != "$CUR_DIGEST" ] || [ -z "$CUR_DIGEST" ]; then
          echo "needs_build=true" >> $GITHUB_OUTPUT
          echo "Build needed: upstream=$UP_DIGEST current=$CUR_DIGEST"
        else
          echo "needs_build=false" >> $GITHUB_OUTPUT
          echo "No build needed"
        fi

    - name: Set up Docker Buildx
      if: steps.check.outputs.needs_build == 'true'
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      if: steps.check.outputs.needs_build == 'true'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DST_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      if: steps.check.outputs.needs_build == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        build-args: |
          BASE_IMAGE=${{ matrix.base_image }}
          TAG=${{ matrix.tag }}
        tags: ${{ env.DST_REGISTRY }}/${{ env.DST_USER }}/${{ matrix.project }}:${{ matrix.tag }}
        labels: |
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
